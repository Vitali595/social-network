{"version":3,"sources":["hoc/withAuthRedirect.tsx","redux/dialogs-reducer.ts","components/Navbar/Navbar.module.css","components/Users/Users.module.css","api/api.ts","components/Navbar/Sidebar/Friends.tsx","components/Navbar/Navbar.tsx","components/Navbar/NavbarContainer.tsx","utils/validators/object-helpers.ts","redux/users-reducer.ts","common/Paginator/Paginator.tsx","assets/images/user.jpg","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","login/Login.tsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","hoc/withSuspense.tsx","App.tsx","index.tsx","common/FormsControls/FormsControls.tsx","assets/images/preloader.svg","common/preloader/Preloader.tsx","common/FormsControls/FormsControls.module.css","components/Navbar/Sidebar/Sidebar.module.css","common/Paginator/Paginator.module.css","utils/validators/validators.ts","components/Header/Header.module.css","redux/profile-reducer.ts"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","action","body","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Friends","className","s","nav","item","src","Navbar","myFriends","friends","map","f","activeClassName","activeLink","active","NavbarContainer","sidebar","updateObjectInArray","itemId","objPropName","newObjProps","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUserCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","totalUsersCount","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","compose","page","items","totalCount","Header","header","loginBlock","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","required","styles","formSummeryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","FormControl","meta","touched","children","hasError","formControl","Textarea","input","child","placeholder","component","validators","text","validate","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.f547017f.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsForRedirectType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    function RedirectComponent(props: MapStateToPropsForRedirectType) {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={\"login\"}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import {ActionsTypes} from \"./redux-store\";\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport const SEND_MESSAGE = \"SEND-MESSAGE\"\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-incubator?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ] as Array<MessageType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 8, message: body}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string) => ({type: SEND_MESSAGE, newMessageBody}) as const\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3xiE0\",\"item\":\"Navbar_item__1ykFu\",\"activeLink\":\"Navbar_activeLink__1-f4N\",\"friends\":\"Navbar_friends__39BSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__5Rx2M\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"9b0d1c83-4c69-43c5-bccd-ffd029e6ed76\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        console.warn(\"Obsolete method. Please use profileAPI object.\")\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","import React from \"react\";\r\nimport s from \"./Sidebar.module.css\";\r\n\r\ntype FriendsPropsType = {\r\n    name: string\r\n}\r\n\r\nexport const Friends = (props: FriendsPropsType) => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <span className={s.item}>\r\n                <img src='https://pbs.twimg.com/profile_images/913636623300141056/58jmo4Ok.jpg' />\r\n                <span className={s.name}>{props.name}</span>\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Friends} from \"./Sidebar/Friends\";\r\nimport {SidebarPropsType} from \"./NavbarContainer\";\r\n\r\n\r\nconst Navbar = (props: SidebarPropsType) => {\r\n\r\n    let myFriends = props.state.friends.map(f => <Friends key={f.id} name={f.name}/>)\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n            <div className={s.friends}>Friends</div>\r\n                {myFriends}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {SidebarType} from \"../../redux/sidebar-reducer\";\r\n\r\ntype mapStateToPropsType = {\r\n    state: SidebarType\r\n}\r\n\r\nexport type SidebarPropsType = mapStateToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        state: state.sidebar\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps)(Navbar)\r\n\r\nexport default NavbarContainer;","export const updateObjectInArray = (item: Array<object>, itemId: number, objPropName: string, newObjProps: object) => {\r\n    return item.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {ActionsTypes, AppStateType} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {updateObjectInArray} from \"../utils/validators/object-helpers\";\r\n\r\nexport type UserType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: { city: string, country: string }\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\n\r\nexport const FOLLOW = \"FOLLOW\"\r\nexport const UNFOLLOW = \"UNFOLLOW\"\r\nexport const SET_USERS = \"SET_USERS\"\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nexport const SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nexport const TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as number[]\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUserCount: action.totalUsersCount}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId}) as const\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId}) as const\r\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users}) as const\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage}) as const\r\nexport const setTotalUserCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n}) as const\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n}) as const\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n}) as const\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    const data = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUserCount(data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: (userId: number) => void) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number): ThunkAction<void, AppStateType, unknown, ActionsTypes> =>\r\n    async (dispatch: Dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow, followSuccess)\r\n    }\r\n\r\nexport const unfollow = (userId: number) => async (dispatch: Dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow, unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer","import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\ntype PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = (\r\n    {totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}\r\n) => {\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span key={p} className={cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p)\r\n                             }}\r\n                >{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>NEXT</button>}\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/user.9dd8496d.jpg\";","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = ({user, follow, unfollow, followingInProgress}) => {\r\n\r\n    return (\r\n        <div>\r\n    <span>\r\n        <div>\r\n            <NavLink to={\"/profile/\" + user.id}>\r\n                <img src={user.photos.small !== null ? user.photos.small : userPhoto} className={s.userPhoto}/>\r\n            </NavLink>\r\n\r\n    </div>\r\n    <div>\r\n    {user.followed\r\n        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n            unfollow(user.id)\r\n        }}>Unfollow</button>\r\n        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n            follow(user.id)\r\n        }}>Follow</button>}\r\n        </div>\r\n        </span>\r\n            <span>\r\n        <span>\r\n            <div>{user.name}</div>\r\n        <div>{user.status}</div>\r\n        </span>\r\n        <span>\r\n        <div>{\"u.location.country\"}</div>\r\n        <div>{\"u.location.city\"}</div>\r\n        </span>\r\n        </span>\r\n        </div>)\r\n}","import React from \"react\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {Paginator} from \"../../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport const Users: React.FC<UsersPropsType> = (\r\n    {\r\n        totalUsersCount, pageSize, currentPage, onPageChanged,\r\n        users, follow, unfollow, followingInProgress, ...props\r\n    }\r\n) => {\r\n\r\n    return <div>\r\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize}\r\n                   currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n        <div>\r\n            {users.map(u => <User user={u} follow={follow} unfollow={unfollow}\r\n                                  followingInProgress={followingInProgress} key={u.id}/>)}\r\n        </div>\r\n    </div>\r\n}","import {AppStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUserCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUserCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {follow, requestUsers, unfollow, UserType} from \"../../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersContainerPropsType = MapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, requestUsers\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: null\r\n    logout: () => void\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return <header className={s.header}>\r\n        {/*<img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />*/}\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={\"/login\"}>Login</NavLink>}\r\n        </div>\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {ActionsTypes} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport const SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\"\r\n\r\nconst initialState = {\r\n    userId: null as number | null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId: null, email: null, login: null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n}) as const\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    const response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n    const response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: null\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return <Header isAuth={this.props.isAuth} login={this.props.login} logout={this.props.logout}/>\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport styles from \"../common/FormsControls/FormsControls.module.css\";\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", Input, [required])}\r\n            {createField(\"Password\", \"password\", Input, [required], {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", Input, [], {type: \"checkbox\"}, \"remember me\")}\r\n            {error && <div className={styles.formSummeryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: \"login\"})(LoginForm)\r\n\r\ntype LoginPropsType = {\r\n    isAuth: boolean\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\nconst Login = (props: LoginPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {ActionsTypes, AppStateType} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"INITIALIZED_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: \"INITIALIZED_SUCCESS\"} as const)\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\nexport default appReducer","import {ActionsTypes} from \"./redux-store\";\r\n\r\nexport type FriendType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type SidebarType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\n\r\nconst initialState: SidebarType = {\r\n    friends: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Valera'}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state: SidebarType = initialState, action: ActionsTypes) => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer, {addPostActionCreator, deletePost, setStatus, setUserProfile} from \"./profile-reducer\";\r\nimport dialogsReducer, {sendMessageCreator} from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer, {\r\n    followSuccess,\r\n    setCurrentPage,\r\n    setTotalUserCount,\r\n    setUsers,\r\n    toggleFollowingProgress,\r\n    toggleIsFetching,\r\n    unfollowSuccess\r\n} from \"./users-reducer\";\r\nimport authReducer, {setAuthUserData} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer, {initializedSuccess} from \"./app-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport type ActionsTypes = ReturnType<typeof addPostActionCreator> | ReturnType<typeof sendMessageCreator>\r\n    | ReturnType<typeof followSuccess> | ReturnType<typeof unfollowSuccess>\r\n    | ReturnType<typeof setUsers> | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUserCount> | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof setUserProfile> | ReturnType<typeof setAuthUserData>\r\n    | ReturnType<typeof toggleFollowingProgress> | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof initializedSuccess> | ReturnType<typeof deletePost>\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React, {ComponentType} from \"react\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n\r\n    return (props: any) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport store, {AppStateType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./common/preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\n\r\ntype AppPropsType = MapStateToPropsType & {\r\n    initializeApp: () => void\r\n}\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <NavbarContainer/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}/>\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer)}/>\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path='/login'\r\n                           render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => (\r\n    {\r\n        initialized: state.app.initialized\r\n    }\r\n)\r\n\r\nconst AppContainer = compose\r\n    < React.ComponentType > (\r\n        withRouter,\r\n            connect(mapStateToProps, {initializeApp}))(App)\r\n\r\nexport const SamuraiJSApp = () => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {SamuraiJSApp} from './App';\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'))\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl: React.FC<any> = ({meta: {touched, error}, children}) => {\r\n\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<any> = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<any> = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField =\r\n    (placeholder: string | null, name: string, component: any, validators: any, props: any = {}, text: string = \"\") => (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} component={component}\r\n                   validate={validators} {...props}/> {text}\r\n        </div>\r\n    )","export default __webpack_public_path__ + \"static/media/preloader.be69e7a9.svg\";","import React from \"react\";\r\nimport preloader from \"../../assets/images/preloader.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1QTeS\",\"error\":\"FormsControls_error__2fR7G\",\"formSummeryError\":\"FormsControls_formSummeryError__2mavm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Sidebar_item__1IIFy\",\"name\":\"Sidebar_name__3QgJ-\",\"nav\":\"Sidebar_nav__1jYzu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1HhB-\",\"pageNumber\":\"Paginator_pageNumber__m9-hy\",\"selectedPage\":\"Paginator_selectedPage__2Btpv\"};","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2_Ezj\",\"loginBlock\":\"Header_loginBlock__1ziO_\"};","import {ActionsTypes} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string\r\n        website: string | null\r\n        vk: string\r\n        twitter: string\r\n        instagram: string\r\n        youtube: string | null\r\n        github: string\r\n        mainLink: string | null\r\n    },\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nexport const ADD_POST = \"ADD_POST\"\r\nexport const SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nexport const SET_STATUS = \"SET_STATUS\"\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ] as Array<PostType>,\r\n    profile: {} as ProfileType,\r\n    status: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost: PostType = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case \"DELETE_POST\": {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText: string) => ({type: ADD_POST, newPostText} as const)\r\nexport const setUserProfile = (profile: ProfileType) => ({type: SET_USER_PROFILE, profile} as const)\r\nexport const setStatus = (status: string) => ({type: SET_STATUS, status} as const)\r\nexport const deletePost = (postId: number) => ({type: \"DELETE_POST\", postId} as const)\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: Dispatch) => {\r\n    const response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: Dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer"],"sourceRoot":""}